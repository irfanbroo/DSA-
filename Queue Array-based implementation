#include <stdio.h>
#define MAX_SIZE 100

int queue[MAX_SIZE];
int front = -1;
int rear = -1;

// Function to enqueue an element into the queue
void enQueue(int data) {
    if (rear == MAX_SIZE - 1) {
        printf("Queue Overflow\n");
        return;
    }
    if (front == -1) {
        front = 0;
    }
    rear++;
    queue[rear] = data;
}

// Function to dequeue an element from the queue
int deQueue() {
    if (front == -1 || front > rear) {
        printf("Queue Underflow\n");
        return -1; // Or any other appropriate error value
    }
    int data = queue[front];
    front++;
    return data;
}

// Function to peek at the front element of the queue
int peek() {
    if (front == -1 || front > rear) {
        printf("Queue is empty\n");
        return -1; // Or any other appropriate error value
    }
    return queue[front];
}

// Function to check if the queue is empty
int is_empty() {
    return front == -1 || front > rear;
}

int main() {
    enQueue(10);
    enQueue(20);
    enQueue(30);

    printf("Front element: %d\n", peek());

    printf("Dequeued element: %d\n", deQueue());
    printf("Dequeued element: %d\n", deQueue());

    printf("Is queue empty? %s\n", is_empty() ? "Yes" : "No");

    return 0;
}
